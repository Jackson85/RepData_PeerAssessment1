View(data)
unzip(zipfile="repdata-data-activity.zip")
data <- read.csv("activity.csv",sep=",", na.strings ="NA", colClasses=c("numeric","date","numeric"))
unzip(zipfile="repdata-data-activity.zip")
data <- read.csv("activity.csv",sep=",", na.strings ="NA", colClasses=c("numeric","date","numeric"))
unzip(zipfile="repdata-data-activity.zip")
data <- read.csv("activity.csv",sep=",", na.strings ="NA", colClasses=c("numeric","Date","numeric"))
View(data)
View(data)
unzip(zipfile="repdata-data-activity.zip")
data <- read.csv("activity.csv",sep=",", na.strings ="NA", colClasses=c("numeric","Date","numeric"))
library(ggplot2)
total_no.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total_no.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total_no.steps, na.rm=TRUE)
median(total_no.steps, na.rm=TRUE)
averages <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=averages, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
averages[which.max(averages$steps),]
missing <- is.na(data$steps)
# How many missing
table(missing)
# Replace each missing value with the mean value of its 5-minute interval
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (averages[averages$interval==interval, "steps"])
return(filled)
}
filled.data <- data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
total_no.steps <- tapply(filled.data$steps, filled.data$date, FUN=sum)
qplot(total_no.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total_no.steps)
median(total_no.steps)
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("weekend")
else
stop("invalid date")
}
filled.data$date <- as.Date(filled.data$date)
filled.data$day <- sapply(filled.data$date, FUN=weekday.or.weekend)
averages <- aggregate(steps ~ interval + day, data=filled.data, mean)
ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
unzip(zipfile="repdata-data-activity.zip")
data <- read.csv("activity.csv",sep=",", na.strings ="NA", colClasses=c("numeric","Date","numeric"))
library(ggplot2)
total_no.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total_no.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total_no.steps, na.rm=TRUE)
median(total_no.steps, na.rm=TRUE)
avg <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=avg, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
avg[which.max(avg$steps),]
missing_steps <- is.na(data$steps)
table(missing_steps)
# Replace each missing value with the mean value of its 5-minute interval
data_fill.value <- function(steps, interval) {
fill <- NA
if (!is.na(steps))
fill <- c(steps)
else
fill <- (avg[avg$interval==interval, "steps"])
return(fill)
}
fill.data <- data
fill.data$steps <- mapply(data_fill.value, fill.data$steps, fill.data$interval)
total_no.steps <- tapply(fill.data$steps, fill.data$date, FUN=sum)
qplot(total_no.steps, binwidth=1000, xlab="Total Number Of Steps Taken Each Day")
mean(total_no.steps)
median(total_no.steps)
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("Weekend")
else
stop("Invalid Date")
}
fill.data$date <- as.Date(fill.data$date)
fill.data$day <- sapply(fill.data$date, FUN=weekday.or.weekend)
avg <- aggregate(steps ~ interval + day, data=fill.data, mean)
ggplot(avg, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5 Minutes Interval") + ylab("Number Of Steps")
unzip(zipfile="repdata-data-activity.zip")
data <- read.csv("activity.csv",sep=",", na.strings ="NA", colClasses=c("numeric","Date","numeric"))
library(ggplot2)
total_no.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total_no.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total_no.steps, na.rm=TRUE)
median(total_no.steps, na.rm=TRUE)
avg <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=avg, aes(x=interval, y=steps)) +
geom_line() +
xlab("5 Minute Interval") +
ylab("Average Number Of Steps Taken")
avg[which.max(avg$steps),]
missing_steps <- is.na(data$steps)
table(missing_steps)
# Replace each missing value with the mean value of its 5-minute interval
data_fill.value <- function(steps, interval) {
fill <- NA
if (!is.na(steps))
fill <- c(steps)
else
fill <- (avg[avg$interval==interval, "steps"])
return(fill)
}
fill.data <- data
fill.data$steps <- mapply(data_fill.value, fill.data$steps, fill.data$interval)
total_no.steps <- tapply(fill.data$steps, fill.data$date, FUN=sum)
qplot(total_no.steps, binwidth=1000, xlab="Total Number Of Steps Taken Each Day")
mean(total_no.steps)
median(total_no.steps)
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("Weekend")
else
stop("Invalid Date")
}
fill.data$date <- as.Date(fill.data$date)
fill.data$day <- sapply(fill.data$date, FUN=weekday.or.weekend)
avg <- aggregate(steps ~ interval + day, data=fill.data, mean)
ggplot(avg, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5 Minutes Interval") + ylab("Number Of Steps")
unzip(zipfile="repdata-data-activity.zip")
data <- read.csv("activity.csv",sep=",", na.strings ="NA", colClasses=c("numeric","Date","numeric"))
library(ggplot2)
total_no.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total_no.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total_no.steps, na.rm=TRUE)
median(total_no.steps, na.rm=TRUE)
avg <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=avg, aes(x=interval, y=steps)) +
geom_line() +
xlab("5 Minute Interval") +
ylab("Average Number Of Steps Taken")
avg[which.max(avg$steps),]
missing_data <- is.na(data$steps)
table(missing_data)
# Replace each missing value with the mean value of its 5-minute interval
data_fill.value <- function(steps, interval) {
fill <- NA
if (!is.na(steps))
fill <- c(steps)
else
fill <- (avg[avg$interval==interval, "steps"])
return(fill)
}
fill.data <- data
fill.data$steps <- mapply(data_fill.value, fill.data$steps, fill.data$interval)
total_no.steps <- tapply(fill.data$steps, fill.data$date, FUN=sum)
qplot(total_no.steps, binwidth=1000, xlab="Total Number Of Steps Taken Each Day")
mean(total_no.steps)
median(total_no.steps)
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("Weekend")
else
stop("Invalid Date")
}
fill.data$date <- as.Date(fill.data$date)
fill.data$day <- sapply(fill.data$date, FUN=weekday.or.weekend)
avg <- aggregate(steps ~ interval + day, data=fill.data, mean)
ggplot(avg, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5 Minutes Interval") + ylab("Number Of Steps")
unzip(zipfile="repdata-data-activity.zip")
data <- read.csv("activity.csv",sep=",", na.strings ="NA", colClasses=c("numeric","Date","numeric"))
library(ggplot2)
total_no.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total_no.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total_no.steps, na.rm=TRUE)
median(total_no.steps, na.rm=TRUE)
avg <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=avg, aes(x=interval, y=steps)) +
geom_line() +
xlab("5 Minute Interval") +
ylab("Average Number Of Steps Taken")
avg[which.max(avg$steps),]
missing_data <- is.na(data$steps)
table(missing_data)
# Replace each missing value with the mean value of its 5-minute interval
data_fill.value <- function(steps, interval) {
fill <- NA
if (!is.na(steps))
fill <- c(steps)
else
fill <- (avg[avg$interval==interval, "steps"])
return(fill)
}
fill.data <- data
fill.data$steps <- mapply(data_fill.value, fill.data$steps, fill.data$interval)
total_no.steps <- tapply(fill.data$steps, fill.data$date, FUN=sum)
qplot(total_no.steps, binwidth=1000, xlab="Total Number Of Steps Taken Each Day")
mean(total_no.steps)
median(total_no.steps)
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("Weekend")
else
stop("Invalid Date")
}
fill.data$date <- as.Date(fill.data$date)
fill.data$day <- sapply(fill.data$date, FUN=weekday.or.weekend)
total_no.steps <- tapply(fill.data$steps, fill.data$date, FUN=sum)
qplot(total.steps, binwidth=1000, xlab="Total Number of Steps Taken Each Day")
mean(total_no.steps)
median(total_no.steps)
avg <- aggregate(steps ~ interval + day, data=fill.data, mean)
ggplot(avg, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5 Minutes Interval") + ylab("Number Of Steps")
unzip(zipfile="repdata-data-activity.zip")
data <- read.csv("activity.csv",sep=",", na.strings ="NA", colClasses=c("numeric","Date","numeric"))
library(ggplot2)
total_no.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total_no.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total_no.steps, na.rm=TRUE)
median(total_no.steps, na.rm=TRUE)
avg <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=avg, aes(x=interval, y=steps)) +
geom_line() +
xlab("5 Minute Interval") +
ylab("Average Number Of Steps Taken")
avg[which.max(avg$steps),]
missing_data <- is.na(data$steps)
table(missing_data)
# Replace each missing value with the mean value of its 5-minute interval
data_fill.value <- function(steps, interval) {
fill <- NA
if (!is.na(steps))
fill <- c(steps)
else
fill <- (avg[avg$interval==interval, "steps"])
return(fill)
}
fill.data <- data
fill.data$steps <- mapply(data_fill.value, fill.data$steps, fill.data$interval)
total_no.steps <- tapply(fill.data$steps, fill.data$date, FUN=sum)
qplot(total_no.steps, binwidth=1000, xlab="Total Number Of Steps Taken Each Day")
mean(total_no.steps)
median(total_no.steps)
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("Weekend")
else
stop("Invalid Date")
}
fill.data$date <- as.Date(fill.data$date)
fill.data$day <- sapply(fill.data$date, FUN=weekday.or.weekend)
avg <- aggregate(steps ~ interval + day, data=fill.data, mean)
ggplot(avg, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5 Minutes Interval") + ylab("Number Of Steps")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
unzip(zipfile="repdata-data-activity.zip")
data <- read.csv("activity.csv",sep=",", na.strings ="NA", colClasses=c("numeric","Date","numeric"))
## What is mean total number of steps taken per day?
# plot
library(ggplot2)
total_no.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total_no.steps, binwidth=1000, xlab="total number of steps taken each day")
# calculate the mean and median (total number of steps #taken per day)
mean(total_no.steps, na.rm=TRUE)
median(total_no.steps, na.rm=TRUE)
## What is the average daily activity pattern?
#plot
avg <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=avg, aes(x=interval, y=steps)) +
geom_line() +
xlab("5 Minute Interval") +
ylab("Average Number Of Steps Taken")
avg[which.max(avg$steps),]
## Imputing missing values
# The dataset (days and intervals) have many missing values ("NA"). The missing data may calculate and fill into summaries of the data.
missing_data <- is.na(data$steps)
#calculate missing data
table(missing_data)
# All mising value ("NA") are replaced with mean value for that 5 minutes interval
data_fill.value <- function(steps, interval) {
fill <- NA
if (!is.na(steps))
fill <- c(steps)
else
fill <- (avg[avg$interval==interval, "steps"])
return(fill)
}
fill.data <- data
fill.data$steps <- mapply(data_fill.value, fill.data$steps, fill.data$interval)
#Plot histogram of the total number of steps taken each day and find the mean and median total number of steps with fill dataset
total_no.steps <- tapply(fill.data$steps, fill.data$date, FUN=sum)
qplot(total.steps, binwidth=1000, xlab="Total Number of Steps Taken Each Day")
mean(total_no.steps)
median(total_no.steps)
## Are there differences in activity patterns between weekdays and weekends?
# find the day of the week for each measurement in dataset with fill's value dataset
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("Weekend")
else
stop("Invalid Date")
}
fill.data$date <- as.Date(fill.data$date)
fill.data$day <- sapply(fill.data$date, FUN=weekday.or.weekend)
#  make plot that contain aveerage number of steps taken on weekdays and weekends.
total_no.steps <- tapply(fill.data$steps, fill.data$date, FUN=sum)
qplot(total_no.steps, binwidth=1000, xlab="Total Number Of Steps Taken Each Day")
mean(total_no.steps)
median(total_no.steps)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r loaddata}
unzip(zipfile="repdata-data-activity.zip")
data <- read.csv("activity.csv",sep=",", na.strings ="NA", colClasses=c("numeric","Date","numeric"))
```
## What is mean total number of steps taken per day?
```{r}
library(ggplot2)
total_no.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total_no.steps, binwidth=1000, xlab="total number of steps taken each day")
```
```
calculate the mean and median (total number of steps (taken per day)
mean(total_no.steps, na.rm=TRUE)
median(total_no.steps, na.rm=TRUE)
```
## What is the average daily activity pattern?
```{r}
avg <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=avg, aes(x=interval, y=steps)) +
geom_line() +
xlab("5 Minute Interval") +
ylab("Average Number Of Steps Taken")
```
```{r}
avg[which.max(avg$steps),]
```
## Imputing missing values
The dataset (days and intervals) have many missing values ("NA"). The missing data may calculate and fill into summaries of the data.
```{r}
missing_data <- is.na(data$steps)
#calculate missing data
table(missing_data)
```
All mising value ("NA") are replaced with mean value for that 5 minutes interval
```{r}
data_fill.value <- function(steps, interval) {
fill <- NA
if (!is.na(steps))
fill <- c(steps)
else
fill <- (avg[avg$interval==interval, "steps"])
return(fill)
}
fill.data <- data
fill.data$steps <- mapply(data_fill.value, fill.data$steps, fill.data$interval)
```
Plot histogram of the total number of steps taken each day and find the mean and median total number of steps with fill dataset
total_no.steps <- tapply(fill.data$steps, fill.data$date, FUN=sum)
qplot(total.steps, binwidth=1000, xlab="Total Number of Steps Taken Each Day")
mean(total_no.steps)
median(total_no.steps)
## Are there differences in activity patterns between weekdays and weekends?
find the day of the week for each measurement in dataset with fill's value dataset
```{r}
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("Weekend")
else
stop("Invalid Date")
}
fill.data$date <- as.Date(fill.data$date)
fill.data$day <- sapply(fill.data$date, FUN=weekday.or.weekend)
```
make plot that contain aveerage number of steps taken on weekdays and weekends.
```{r}
total_no.steps <- tapply(fill.data$steps, fill.data$date, FUN=sum)
qplot(total_no.steps, binwidth=1000, xlab="Total Number Of Steps Taken Each Day")
mean(total_no.steps)
median(total_no.steps)
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r loaddata}
unzip(zipfile="repdata-data-activity.zip")
data <- read.csv("activity.csv",sep=",", na.strings ="NA", colClasses=c("numeric","Date","numeric"))
```
## What is mean total number of steps taken per day?
```{r}
library(ggplot2)
total_no.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total_no.steps, binwidth=1000, xlab="total number of steps taken each day")
```
```
calculate the mean and median (total number of steps (taken per day)
mean(total_no.steps, na.rm=TRUE)
median(total_no.steps, na.rm=TRUE)
```
## What is the average daily activity pattern?
```{r}
avg <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=avg, aes(x=interval, y=steps)) +
geom_line() +
xlab("5 Minute Interval") +
ylab("Average Number Of Steps Taken")
```
```{r}
avg[which.max(avg$steps),]
```
## Imputing missing values
The dataset (days and intervals) have many missing values ("NA"). The missing data may calculate and fill into summaries of the data.
```{r}
missing_data <- is.na(data$steps)
#calculate missing data
table(missing_data)
```
All mising value ("NA") are replaced with mean value for that 5 minutes interval
```{r}
data_fill.value <- function(steps, interval) {
fill <- NA
if (!is.na(steps))
fill <- c(steps)
else
fill <- (avg[avg$interval==interval, "steps"])
return(fill)
}
fill.data <- data
fill.data$steps <- mapply(data_fill.value, fill.data$steps, fill.data$interval)
```
Plot histogram of the total number of steps taken each day and find the mean and median total number of steps with fill dataset
```{r}
total_no.steps <- tapply(fill.data$steps, fill.data$date, FUN=sum)
qplot(total_no.steps, binwidth=1000, xlab="Total Number of Steps Taken Each Day")
mean(total_no.steps)
median(total_no.steps)
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("Weekend")
else
stop("Invalid Date")
}
fill.data$date <- as.Date(fill.data$date)
fill.data$day <- sapply(fill.data$date, FUN=weekday.or.weekend)
```
make plot that contain aveerage number of steps taken on weekdays and weekends.
```{r}
avg <- aggregate(steps ~ interval + day, data=fill.data, mean)
ggplot(avg, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5 Minutes Interval") + ylab("Number Of Steps")
```
setwd("C:\\Users\\Wai\\Desktop\\RepData_PeerAssessment1")
